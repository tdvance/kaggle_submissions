#!/usr/bin/python

from numpy import genfromtxt, savetxt

def histogram(l):
    h={}
    for x in l:
        if x in h:
            h[x]+=1
        else:
            h[x] = 1
    return h

def hOfH(l, size=None):
    h = histogram(l)
    h = histogram(dict.values(h))
    result = dict.values(h)
    result.sort(reverse=True)
    if(size is not None):
        while(len(result)<size):
            result += [0]
        while len(result) > size:
            result.pop()
    return result

def handToFeatures(hand):
    suits = [hand[0], hand[2], hand[4], hand[6], hand[8]]
    ranks = [hand[1], hand[3], hand[5], hand[7], hand[9]]
    sh = hOfH(suits, 4)

    


def main():
    #create the training & test sets, skipping the header row with [1:]
    train = genfromtxt(open('Data/train.csv','r'), delimiter=',', dtype='f8')[1:]   

    test = genfromtxt(open('Data/test.csv','r'), delimiter=',', dtype='f8')[1:]

    ptrain = []
    for x in train:
        s1,c1,s2,c2,s3,c3,s4,c4,s5,c5,h = tuple(x)
        suithh=hOfH([s1,s2,s3,s4,s5], 4)
        rankhh=hOfH([c1, c2, c3, c4, c5], 5)
        sc = [c1,c2,c3,c4,c5]
        sc.sort()
        low=sc[0]
        high=sc[-1]
        sc =sc+[sc[0]]
        diffs=[]
        for i in range(0,5):
            diffs.append((sc[i+1]-sc[i]+13+13)%13)
        numDiffs = diffs.count(1)
        y = [int(z) for z in suithh] + [int(z) for z in rankhh] + [numDiffs, low, high, h] 
        ptrain.append(y)
    
    savetxt("Data/trainPrep.csv",ptrain, delimiter=',', fmt='%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d', 
            header='s1,s2,s3,s4,c1,c2,c3,c4,c5,d,low,high,qh', comments = '')


    ptest = []
    for x in test:
        n,s1,c1,s2,c2,s3,c3,s4,c4,s5,c5 = tuple(x)
        suithh=hOfH([s1,s2,s3,s4,s5], 4)
        rankhh=hOfH([c1, c2, c3, c4, c5], 5)
        sc = [c1,c2,c3,c4,c5]
        sc.sort()
        low=sc[0]
        high=sc[-1]        
        sc =sc+[sc[0]]
        diffs=[]
        for i in range(0,5):
            diffs.append((sc[i+1]-sc[i]+13+13)%13)
        numDiffs = diffs.count(1)
        y = [n] + [int(z) for z in suithh] + [int(z) for z in rankhh] + [numDiffs, low, high]
        ptest.append(y)
    
    savetxt("Data/testPrep.csv",ptest, delimiter=',', fmt='%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d', 
            header='n,s1,s2,s3,s4,c1,c2,c3,c4,c5,d,low,high', comments = '')
    
if __name__=="__main__":
    main()
